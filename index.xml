<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>漫步在數位靈魂之中</title>
    <link>https://chimerakang.github.io/</link>
    <description>Recent content on 漫步在數位靈魂之中</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Chimera</copyright>
    <lastBuildDate>Thu, 15 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chimerakang.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to build a AR app by Unity with Vuforia</title>
      <link>https://chimerakang.github.io/posts/vuforia1/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chimerakang.github.io/posts/vuforia1/</guid>
      <description>前言 目前在unity上面有兩間廠商支援AR，一是鼎鼎大名的Google大神，剛開始推廣AR Core這個自家服務，雖然沒有什麼大問題，不過在相容性上面有些問題，很多舊一點的手機不能正常執行。另外一間是在AR這個領域耕耘許久的Vuforia，目前最新的版本是(8.3.8)，由此可知這個套件已經經過市場的迭代更新，相容性的問題是比較理想的，終點是Unity已經內建支援，所以今天要選擇這個套件。
什麼是AR，可以做什麼 另外很多人不了解AR是甚麼，如果跟大家說，寶可夢算是第一個成功的AR產品，這樣子就比較容易理解。AR的服務大致上是利用手機的攝影鏡頭，並結合相關的技術，將虛擬的物件顯示在攝影畫面中，將兩者做結合。
目前大部分實現都是遊戲為主，不過AR也適合結合衛星導航，可以在投影在抬頭顯示器上面，清楚標示行進方向或者地標地址
還有一部分產品是結合AR眼睛，讓使用者直接佩戴，適合做教育訓練，讓新進員工可以按照步驟一步步操作維修訓練或者各項技術實習工作。
準備 Unity，啟動 Vuforia 首先開啟Unity 2018，選擇這個版本的主要原因是因為穩定度高，而且有問題還可以持續得到原廠更新服務。 當初安裝Unity的時候，也同時安裝Vuforia的話，現在只要將選項打開即可
File -&amp;gt; Build Settings -&amp;gt; Player Settings&amp;hellip; -&amp;gt; Inspector -&amp;gt; XR Settings -&amp;gt; Vuforia Augmented Reality 如果沒有的話，點開 XR Settings 的畫面應該會是這樣： 點擊藍色的字體就可以直接引導到下載連結，會根據Unity的版本直接下載Vuforia的套件。 安裝完之後，同時需要將Unity重啟，接著 Vuforia Augmented Reality 應該就可以啟動了。
建立 Vuforia ID 接著我們需要建立Vuforia的開發帳號，現在連線Vuforia Developer Portal上註冊一個開發帳號 接著登入Vuforia 按下右上角的Get Development Key 接著新增一組Key，待會這個Key會出現在列表中 在列表中點擊名稱進入頁面即可看到一組序號，複製這組序號，待會貼到Unity Editor上面 回到Unity，打開Vuforia Configuration： 將剛剛的序號貼到 App Licence Key 中即可 建立 Vuforia image db 然後回到Vuforia的網頁，切換到 Target Manager 的頁面，新增一個database，這個檔案待會需要下載並安裝到unity當中 新增的Database會顯示在列表中，點擊進入頁面，此時點擊Add Target 此時選擇將一張照片上傳，並填入此照片的寬度和一個名稱，按下Add之後，稍等一下，Vuforia會將此圖片作一些處理，大約幾分鐘後顯示Complete，下載database檔案 記得要選擇Unity 然後就會將檔案下載並存成.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://chimerakang.github.io/about/about/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chimerakang.github.io/about/about/</guid>
      <description> Hi there My name is Chimera. I&amp;rsquo;m a programmer for interest and fun.
Right now focus on:
 game (c++, unity, opengl) mobile (iOS, android) AI (face recognition, voice recognition, neural network, tensorflow, caffe) Network (chat, video streaming, match making, proxy ) VR (study, game) AR (lbs, card game, navigation )  familiar language: c, c++, c#, java, golang, obj-c, python
 My Email  </description>
    </item>
    
    <item>
      <title>Build my first blog by Hugo and Github, auto deploy by Travis &lt;1&gt;</title>
      <link>https://chimerakang.github.io/posts/first-post/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chimerakang.github.io/posts/first-post/</guid>
      <description>前言  Hugo 是個快速產生靜態網站的工具，golang開發，快速有效，有很多theme可以支援 Github 是個工程師必備良藥，也支援Pages服務，就是靜態網頁，所以將Hugo建好的靜態網頁直接上傳到Github是很合適的組合，而且是免費又快速，還不用自己維護，這世界怎麼有這麼佛心的服務 Travis 是第一次接觸，大概瞭解了一下這是個提供高度自動化工具，只要寫個簡單的腳本，就可以支援很多自動化工作，剛好又高度整合Github。據說功能不僅止於此，有機會可以來做一些更複雜有趣的事情  安裝 Hugo mac使用者如果已經安裝brew的話，只要輸入以下指令即可安裝Hugo
brew install hugo  目前最新的版本應該是 0.56.3
建立部落格 開啟Terminal，只要輸入底下的指令，Hugo馬上會在blog這個目錄下產生所有需要的資源和程式碼
Hugo new site blog  修改 config.toml 接著開始做一些修改，首先進入目錄中需要修改config.toml，最重要的是新增theme，Hugo的生態系有相當多的theme，你可以選擇你喜歡的加入，底下是我的第一版的設定：
baseURL = &amp;quot;https://chimerakang.github.io/&amp;quot; languageCode = &amp;quot;en-us&amp;quot; defaultContentLanguage = &amp;quot;zh-tw&amp;quot; title = &amp;quot;Chimera&#39;s Blog&amp;quot; theme = &amp;quot;terminal&amp;quot; paginate = 5 [Author] name = &amp;quot;Chimera&amp;quot; [params] contentTypeName = &amp;quot;posts&amp;quot; themeColor = &amp;quot;green&amp;quot; showMenuItems = 2 # set theme to full screen width fullWidthTheme = false # center theme with default width centerTheme = false [languages] [languages.</description>
    </item>
    
    <item>
      <title>Build my first blog by Hugo and Github, auto deploy by Travis &lt;2&gt;</title>
      <link>https://chimerakang.github.io/posts/post2github/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chimerakang.github.io/posts/post2github/</guid>
      <description>init git 首先進入blog目錄，初始化git環境，同時將github的
.travis.yml language: go go: - &amp;quot;1.8&amp;quot; # 指定Golang 1.8 install: - wget https://github.com/gohugoio/hugo/releases/download/v0.55.4/hugo_0.55.4_Linux-64bit.deb - sudo dpkg -i hugo*.deb before_script: - echo -e &amp;quot;Host github.com\n\tStrictHostKeyChecking no\n&amp;quot; &amp;gt;&amp;gt; ~/.ssh/config - git config --global user.email ${GITHUB_EMAIL} - git config --global user.name ${GITHUB_USERNAME} script: - hugo after_script: - git clone &amp;quot;https://chimerakang:${GithubToken}@${GH_REF}&amp;quot; github-pages - rm github-pages/public -rf - cp ./public/* github-pages -rf - cd github-pages - git add . - git commit -m &amp;quot;Update Blog By TravisCI with Build $TRAVIS_BUILD_NUMBER&amp;quot; - git tag v0.</description>
    </item>
    
  </channel>
</rss>